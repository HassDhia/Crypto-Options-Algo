version: '3.8'

services:
  # Infrastructure services
  redpanda:
    image: docker.vectorized.io/vectorized/redpanda:v22.2.1
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --reserve-memory 0M
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "rpk", "cluster", "health"]
      interval: 5s
      timeout: 10s
      retries: 10

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Agents and services
  ingestor:
    build: ./services/ingestor
    environment:
      KAFKA_BROKERS: redpanda:29092
      DERIBIT_TESTNET: "true"
    depends_on:
      - redpanda

  scout-agent:
    build: ./scout-agent
    environment:
      IV_SERVICE_URL: http://iv-surface:5000
      REDIS_URL: redis://redis:6379
    depends_on:
      - ingestor
      - redis

  # Test runner
  tester:
    image: python:3.10-slim
    volumes:
      - ./integration-tests:/app
    working_dir: /app
    command: pytest -v
    depends_on:
      redpanda:
        condition: service_healthy
      scout-agent:
        condition: service_started

# Health checks ensure services are ready before testing
